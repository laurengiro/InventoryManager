@using Microsoft.AspNetCore.Authorization
@using InventoryManager.Security
@model List<InventoryManager.Models.Item>
@inject IAuthorizationService AuthorizationService

<h1>@User.Claims.FirstOrDefault(c => c.Type == "Company").Value's Inventory Items</h1>


@if (Model.Where(i => i.Discontinued == false).ToList().Count > 0)
{
    <h3>Active Items</h3>
    <table class="table">

        <tr>
            <th>SKU</th>
            <th>Description</th>
            <th>Quantity on Hand</th>
            <th>Average Unit Cost</th>
            <th>Item Total Value</th>
            <th>Supplier</th>
            <th></th>
        </tr>


        @{
            var requirement = new ManageItemAccessRequirement();
            foreach (var item in Model.Where(i => i.Discontinued == false).ToList())
            {
                var authorizationResult = await AuthorizationService.AuthorizeAsync(User, item, requirement);
                if (authorizationResult.Succeeded)
                {
                    <tr>
                        <td>@item.SKU</td>
                        <td>@item.Description</td>
                        <td>@item.QuantityOnHand</td>
                        <td>@String.Format("{0:C}", item.UnitCost)</td>
                        <td>@String.Format("{0:C}", item.SKUTotalValue)</td>
                        <td>@item.Supplier.Name</td>
                        <td>
                            <a asp-action="Edit" asp-controller="Item" asp-route-id="@item.ID">Edit</a> |
                            <a asp-action="AddInventory" asp-controller="Item" asp-route-id="@item.ID">Add Inventory</a>
                        </td>
                    </tr>
                }
            }
        }
        <tr>
            <td colspan="2"><strong>Total (Active Items)</strong></td>
            <td><strong>@Model.Where(i => i.Discontinued == false).Select(i => i.QuantityOnHand).ToList().Sum()</strong></td>
            <td></td>
            <td><strong>@string.Format("{0:C}", Model.Where(i => i.Discontinued == false).Select(i => i.SKUTotalValue).ToList().Sum())</strong></td>
            <td></td>
            <td></td>
        </tr>
    </table>
    <p><a asp-controller="Item" asp-action="MarkDiscontinued" class="btn btn-warning">Mark Item(s) Discontinued</a></p>
}

@if (Model.Where(i => i.Discontinued == true).ToList().Count > 0)
{
    <h3>Discontinued Items</h3>
    <table class="table">

        <tr>
            <th>SKU</th>
            <th>Description</th>
            <th>Quantity on Hand</th>
            <th>Average Unit Cost</th>
            <th>Item Total Value</th>
            <th>Supplier</th>
            <th></th>
        </tr>


        @{
            var requirement = new ManageItemAccessRequirement();
            foreach (var item in Model.Where(i => i.Discontinued == true).ToList())
            {
                var authorizationResult = await AuthorizationService.AuthorizeAsync(User, item, requirement);
                if (authorizationResult.Succeeded)
                {
                    <tr>
                        <td>@item.SKU</td>
                        <td>@item.Description</td>
                        <td>@item.QuantityOnHand</td>
                        <td>@String.Format("{0:C}", item.UnitCost)</td>
                        <td>@String.Format("{0:C}", item.SKUTotalValue)</td>
                        <td>@item.Supplier.Name</td>
                        <td>
                            <a asp-action="Edit" asp-controller="Item" asp-route-id="@item.ID">Edit</a> |
                            <a asp-action="AddInventory" asp-controller="Item" asp-route-id="@item.ID">Add Inventory</a>
                        </td>
                    </tr>
                }
            }
        }
        <tr>
            <td colspan="2"><strong>Total (Discontinued Items)</strong></td>
            <td><strong>@Model.Where(i => i.Discontinued == true).Select(i => i.QuantityOnHand).ToList().Sum()</strong></td>
            <td></td>
            <td><strong>@string.Format("{0:C}", Model.Where(i => i.Discontinued == true).Select(i => i.SKUTotalValue).ToList().Sum())</strong></td>
            <td></td>
            <td></td>
        </tr>
    </table>
}


@if (Model.Count == 0)
{
    <p>No items yet!</p>
}

<p>
    <a asp-controller="Item" asp-action="Add" class="btn btn-primary">Add Item</a>
    @if (Model.Count > 0)
    {
        <a asp-controller="Item" asp-action="DeleteMultiple" class="btn btn-danger">Delete Items</a>
    }
</p>