@using Microsoft.AspNetCore.Authorization
@using InventoryManager.Security
@model List<InventoryManager.Models.Item>
@inject IAuthorizationService AuthorizationService

<h1>@User.Claims.FirstOrDefault(c => c.Type == "Company").Value's Inventory Items</h1>

<table class="table">

    <tr>
        <th>Name</th>
        <th>Description</th>
        <th>Quantity on Hand</th>
        <th>Unit Cost</th>
        <th>Item Total Value</th>
        <th>Supplier</th>
        <th></th>
    </tr>

    @{
        var requirement = new ManageItemAccessRequirement();
        foreach (var item in Model)
        {
            var authorizationResult = await AuthorizationService.AuthorizeAsync(User, item, requirement);
            if (authorizationResult.Succeeded)
            {
                <tr>
                    <td>@item.SKU</td>
                    <td>@item.Description</td>
                    <td>@item.QuantityOnHand</td>
                    <td>@String.Format("{0:C}", item.UnitCost)</td>
                    <td>@String.Format("{0:C}", item.SKUTotalValue)</td>
                    <td>@item.Supplier.Name</td>
                    <td><a asp-action="Edit" asp-controller="Item" asp-route-id="@item.ID">Edit</a></td>
                </tr>
            }
        }
    }
</table>

@if (Model.Count == 0)
{
    <p>No items yet!</p>
}

<p><a asp-controller="Item" asp-action="Add">Add Item</a> | <a asp-controller="Item" asp-action="Remove">Remove Item</a></p>